// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: einride/iam/v1/identity_token.proto

package iamv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A JWT identity token.
type IdentityToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The raw token value.
	Raw string `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	// The "iss" claim identifies the principal that issued the JWT.
	// The processing of this claim is generally application specific.
	// The "iss" value is a case-sensitive string containing a string or URI value.
	Iss string `protobuf:"bytes,2,opt,name=iss,proto3" json:"iss,omitempty"`
	// The "sub" claim identifies the principal that is the
	// subject of the JWT.  The claims in a JWT are normally statements
	// about the subject.  The subject value MUST either be scoped to be
	// locally unique in the context of the issuer or be globally unique.
	// The processing of this claim is generally application specific.
	// The "sub" value is a case-sensitive string containing a string or URI value.
	Sub string `protobuf:"bytes,3,opt,name=sub,proto3" json:"sub,omitempty"`
	// The "aud" claim identifies the recipients that the JWT is intended for.
	// Each principal intended to process the JWT MUST identify itself with a value in the audience claim.
	// If the principal processing the claim does not identify itself with a value in the
	// "aud" claim when this claim is present, then the JWT MUST be rejected.
	// In the general case, the "aud" value is an array of case-sensitive strings, each containing a
	// string or URI value.
	// In the special case when the JWT has one audience, the "aud" value MAY be a
	// single case-sensitive string containing a string or URI value.
	// The interpretation of audience values is generally application specific.
	Aud string `protobuf:"bytes,4,opt,name=aud,proto3" json:"aud,omitempty"`
	// The "exp" claim identifies the expiration time on or after
	// which the JWT MUST NOT be accepted for processing.
	// The processing of the "exp" claim requires that the current date/time
	// MUST be before the expiration date/time listed in the "exp" claim.
	Exp int64 `protobuf:"varint,5,opt,name=exp,proto3" json:"exp,omitempty"`
	// The "nbf" (not before) claim identifies the time before which the JWT
	// MUST NOT be accepted for processing. The processing of the "nbf"
	// claim requires that the current date/time MUST be after or equal to
	// the not-before date/time listed in the "nbf" claim. Implementers MAY
	// provide for some small leeway, usually no more than a few minutes, to
	// account for clock skew. Its value MUST be a number containing a
	// numeric date value.
	Nbf int64 `protobuf:"varint,6,opt,name=nbf,proto3" json:"nbf,omitempty"`
	// The "iat" claim identifies the time at which the JWT was
	// issued.  This claim can be used to determine the age of the JWT.
	// Its value MUST be a number containing a numeric date value.
	Iat int64 `protobuf:"varint,7,opt,name=iat,proto3" json:"iat,omitempty"`
}

func (x *IdentityToken) Reset() {
	*x = IdentityToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_iam_v1_identity_token_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityToken) ProtoMessage() {}

func (x *IdentityToken) ProtoReflect() protoreflect.Message {
	mi := &file_einride_iam_v1_identity_token_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityToken.ProtoReflect.Descriptor instead.
func (*IdentityToken) Descriptor() ([]byte, []int) {
	return file_einride_iam_v1_identity_token_proto_rawDescGZIP(), []int{0}
}

func (x *IdentityToken) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *IdentityToken) GetIss() string {
	if x != nil {
		return x.Iss
	}
	return ""
}

func (x *IdentityToken) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *IdentityToken) GetAud() string {
	if x != nil {
		return x.Aud
	}
	return ""
}

func (x *IdentityToken) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *IdentityToken) GetNbf() int64 {
	if x != nil {
		return x.Nbf
	}
	return 0
}

func (x *IdentityToken) GetIat() int64 {
	if x != nil {
		return x.Iat
	}
	return 0
}

var File_einride_iam_v1_identity_token_proto protoreflect.FileDescriptor

var file_einride_iam_v1_identity_token_proto_rawDesc = []byte{
	0x0a, 0x23, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x75, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x75, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x75, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x78,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x62, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6e, 0x62, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x61, 0x74, 0x42, 0xb6, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x69,
	0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x32, 0x67, 0x6f, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x74,
	0x65, 0x63, 0x68, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31,
	0x3b, 0x69, 0x61, 0x6d, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x45, 0x49, 0x58, 0xaa, 0x02, 0x0e, 0x45,
	0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x49, 0x61, 0x6d, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e,
	0x45, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x49, 0x61, 0x6d, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x1a, 0x45, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x49, 0x61, 0x6d, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x45, 0x69,
	0x6e, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x3a, 0x49, 0x61, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_einride_iam_v1_identity_token_proto_rawDescOnce sync.Once
	file_einride_iam_v1_identity_token_proto_rawDescData = file_einride_iam_v1_identity_token_proto_rawDesc
)

func file_einride_iam_v1_identity_token_proto_rawDescGZIP() []byte {
	file_einride_iam_v1_identity_token_proto_rawDescOnce.Do(func() {
		file_einride_iam_v1_identity_token_proto_rawDescData = protoimpl.X.CompressGZIP(file_einride_iam_v1_identity_token_proto_rawDescData)
	})
	return file_einride_iam_v1_identity_token_proto_rawDescData
}

var file_einride_iam_v1_identity_token_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_einride_iam_v1_identity_token_proto_goTypes = []interface{}{
	(*IdentityToken)(nil), // 0: einride.iam.v1.IdentityToken
}
var file_einride_iam_v1_identity_token_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_einride_iam_v1_identity_token_proto_init() }
func file_einride_iam_v1_identity_token_proto_init() {
	if File_einride_iam_v1_identity_token_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_einride_iam_v1_identity_token_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_einride_iam_v1_identity_token_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_einride_iam_v1_identity_token_proto_goTypes,
		DependencyIndexes: file_einride_iam_v1_identity_token_proto_depIdxs,
		MessageInfos:      file_einride_iam_v1_identity_token_proto_msgTypes,
	}.Build()
	File_einride_iam_v1_identity_token_proto = out.File
	file_einride_iam_v1_identity_token_proto_rawDesc = nil
	file_einride_iam_v1_identity_token_proto_goTypes = nil
	file_einride_iam_v1_identity_token_proto_depIdxs = nil
}

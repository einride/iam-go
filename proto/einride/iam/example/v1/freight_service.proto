syntax = "proto3";

package einride.iam.example.v1;

import "einride/iam/example/v1/shipment.proto";
import "einride/iam/example/v1/shipper.proto";
import "einride/iam/example/v1/site.proto";
import "einride/iam/v1/annotations.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/iam/admin/v1/iam.proto";
import "google/iam/v1/iam_policy.proto";
import "google/iam/v1/policy.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// A shipper operation.
option (google.api.resource_definition) = {
  type: "iam-example.einride.tech/ShipperOperation"
  pattern: "shippers/{shipper}/operations/{operation}"
  plural: "shipperOperations"
  singular: "shipperOperation"
};

// This API represents a simple freight service.
//
// It defines the following resource model:
//
// - The API has a collection of [Shipper][einride.example.freight.v1.Shipper]
//   resources, named `shippers/*`
//
// - Each Shipper has a collection of [Site][einride.example.freight.v1.Site]
//   resources, named `shippers/*/sites/*`
//
// - Each Shipper has a collection of [Shipment][einride.example.freight.v1.Shipment]
//   resources, named `shippers/*/shipments/*`
service FreightService {
  option (google.api.default_host) = "iam-example.einride.tech";

  // Get a shipper.
  // See: https://google.aip.dev/131 (Standard methods: Get).
  rpc GetShipper(GetShipperRequest) returns (Shipper) {
    option (google.api.http) = {get: "/v1/{name=shippers/*}"};
    option (google.api.method_signature) = "name";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.shippers.get"
      before: {
        expression: "test(caller, request.name)"
        description: "The caller must have permission to get the shipper."
      }
    };
  }

  // List shippers.
  // See: https://google.aip.dev/132 (Standard methods: List).
  rpc ListShippers(ListShippersRequest) returns (ListShippersResponse) {
    option (google.api.http) = {get: "/v1/shippers"};
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.shippers.list"
      before: {
        expression: "test(caller, '/')"
        description: "The caller must have permission to list all shippers."
      }
    };
  }

  // Create a shipper.
  // See: https://google.aip.dev/133 (Standard methods: Create).
  rpc CreateShipper(CreateShipperRequest) returns (Shipper) {
    option (google.api.http) = {
      post: "/v1/shippers"
      body: "shipper"
    };
    option (google.api.method_signature) = "shipper,shipper_id";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.shippers.create"
      before: {
        expression: "test(caller, '/')"
        description: "The caller must have permission to create new shippers."
      }
    };
  }

  // Update a shipper.
  // See: https://google.aip.dev/134 (Standard methods: Update).
  rpc UpdateShipper(UpdateShipperRequest) returns (Shipper) {
    option (google.api.http) = {
      patch: "/v1/{shipper.name=shippers/*}"
      body: "shipper"
    };
    option (google.api.method_signature) = "shipper,update_mask";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.shippers.update"
      before: {
        expression: "test(caller, request.shipper.name)"
        description: "The caller must have permission to update the shipper."
      }
    };
  }

  // Delete a shipper.
  // See: https://google.aip.dev/135 (Standard methods: Delete).
  // See: https://google.aip.dev/151 (Long-running operations).
  rpc DeleteShipper(DeleteShipperRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {delete: "/v1/{name=shippers/*}"};
    option (google.api.method_signature) = "name";
    option (google.longrunning.operation_info) = {
      response_type: "Shipper"
      metadata_type: "DeleteShipperOperationMetadata"
    };
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.shippers.delete"
      before: {
        expression: "test(caller, request.name)"
        description: "The caller must have permission to delete the shipper."
      }
    };
  }

  // Get a site.
  // See: https://google.aip.dev/131 (Standard methods: Get).
  rpc GetSite(GetSiteRequest) returns (Site) {
    option (google.api.http) = {get: "/v1/{name=shippers/*/sites/*}"};
    option (google.api.method_signature) = "name";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.sites.get"
      before: {
        expression: "test(caller, request.name)"
        description: "The caller must have permission to get the site."
      }
    };
  }

  // List sites for a shipper.
  // See: https://google.aip.dev/132 (Standard methods: List).
  rpc ListSites(ListSitesRequest) returns (ListSitesResponse) {
    option (google.api.http) = {get: "/v1/{parent=shippers/*}/sites"};
    option (google.api.method_signature) = "parent";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.sites.list"
      before: {
        expression: "test(caller, request.parent)"
        description: "The caller must have permission to list all sites under the parent shipper."
      }
    };
  }

  // Create a site.
  // See: https://google.aip.dev/133 (Standard methods: Create).
  rpc CreateSite(CreateSiteRequest) returns (Site) {
    option (google.api.http) = {
      post: "/v1/{parent=shippers/*}/sites"
      body: "site"
    };
    option (google.api.method_signature) = "parent,site,site_id";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.sites.create"
      before: {
        expression: "test(caller, request.parent)"
        description: "The caller must have permission to create new sites under the parent shipper."
      }
    };
  }

  // Update a site.
  // See: https://google.aip.dev/134 (Standard methods: Update).
  rpc UpdateSite(UpdateSiteRequest) returns (Site) {
    option (google.api.http) = {
      patch: "/v1/{site.name=shippers/*/sites/*}"
      body: "site"
    };
    option (google.api.method_signature) = "site,update_mask";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.sites.update"
      before: {
        expression: "test(caller, request.site.name)"
        description: "The caller must have permission to update the site."
      }
    };
  }

  // Delete a site.
  // See: https://google.aip.dev/135 (Standard methods: Delete).
  // See: https://google.aip.dev/164 (Soft delete).
  rpc DeleteSite(DeleteSiteRequest) returns (Site) {
    option (google.api.http) = {delete: "/v1/{name=shippers/*/sites/*}"};
    option (google.api.method_signature) = "name";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.sites.delete"
      before: {
        expression: "test(caller, request.name)"
        description: "The caller must have permission to delete the site."
      }
    };
  }

  // Batch get sites.
  // See: https://google.aip.dev/231 (Batch methods: Get).
  rpc BatchGetSites(BatchGetSitesRequest) returns (BatchGetSitesResponse) {
    option (google.api.http) = {get: "/v1/{parent=shippers/*}/sites:batchGet"};
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.sites.get"
      before: {
        expression: "test(caller, request.parent) || test_all(caller, request.names)"
        description:
          "The caller must have permission to get all sites under the parent shipper"
          ", or the caller must have permission to get each of the requested sites."
      }
    };
  }

  // Search sites.
  // See: https://google.aip.dev/136 (Custom methods).
  rpc SearchSites(SearchSitesRequest) returns (SearchSitesResponse) {
    option (google.api.http) = {get: "/v1/{parent=shippers/*}/sites:search"};
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.sites.get"
      after: {
        expression:
          "test(caller, request.parent)"
          " || test_all(caller, response.sites.map(s, s.name))"
        description:
          "The caller must have permission to get all sites under the parent shipper"
          ", or the caller must have permission to get each of the requested sites."
      }
    };
  }

  // Get a shipment.
  // See: https://google.aip.dev/131 (Standard methods: Get).
  rpc GetShipment(GetShipmentRequest) returns (Shipment) {
    option (google.api.http) = {get: "/v1/{name=shippers/*/shipments/*}"};
    option (google.api.method_signature) = "name";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.shipments.get"
      after: {
        expression: "test_any(caller, [request.name, response.origin_site, response.destination_site])"
        description:
          "The caller must have permission to get the shipment"
          ", or the caller must have permission to get shipments from the shipment's origin site"
          ", or the caller must have permission to get shipments to the shipment's destination site."
      }
    };
  }

  // List shipments for a shipper.
  // See: https://google.aip.dev/132 (Standard methods: List).
  rpc ListShipments(ListShipmentsRequest) returns (ListShipmentsResponse) {
    option (google.api.http) = {get: "/v1/{parent=shippers/*}/shipments"};
    option (google.api.method_signature) = "parent";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.shipments.list"
      before: {
        expression: "test(caller, request.parent)"
        description: "The caller must have permission to list all shipments under the parent shipper."
      }
    };
  }

  // Create a shipment.
  // See: https://google.aip.dev/133 (Standard methods: Create).
  rpc CreateShipment(CreateShipmentRequest) returns (Shipment) {
    option (google.api.http) = {
      post: "/v1/{parent=shippers/*}/shipments"
      body: "shipment"
    };
    option (google.api.method_signature) = "parent,shipment,shipment_id";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.shipments.create"
      before: {
        expression: "test_any(caller, [request.parent, request.shipment.origin_site, request.shipment.destination_site])"
        description:
          "The caller must have permission to create shipments under the parent shipper"
          ", or the caller must have permission to create shipments from the shipment's origin site"
          ", or the caller must have permission to create shipments to the shipment's destination site."
      }
    };
  }

  // Update a shipment.
  // See: https://google.aip.dev/134 (Standard methods: Update).
  rpc UpdateShipment(UpdateShipmentRequest) returns (Shipment) {
    option (google.api.http) = {
      patch: "/v1/{shipment.name=shippers/*/shipments/*}"
      body: "shipment"
    };
    option (google.api.method_signature) = "shipment,update_mask";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.shipments.update"
      // Must read existing shipment during authorization to check origin/destination site.
      custom: true
    };
  }

  // Delete a shipment.
  // See: https://google.aip.dev/135 (Standard methods: Delete).
  // See: https://google.aip.dev/164 (Soft delete).
  rpc DeleteShipment(DeleteShipmentRequest) returns (Shipment) {
    option (google.api.http) = {delete: "/v1/{name=shippers/*/shipments/*}"};
    option (google.api.method_signature) = "name";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.shipments.delete"
      before: {
        expression: "test(caller, request.name)"
        description: "The caller must have permission to delete the shipment."
      }
    };
  }

  // Batch get shipments.
  // See: https://google.aip.dev/231 (Batch methods: Get).
  rpc BatchGetShipments(BatchGetShipmentsRequest) returns (BatchGetShipmentsResponse) {
    option (google.api.http) = {get: "/v1/{parent=shippers/*}/shipments:batchGet"};
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.shipments.get"
      after: {
        expression:
          "test(caller, request.parent)"
          " || response.shipments.all(s, test_any(caller, [s.name, s.origin_site, s.destination_site]))"
        description:
          "The caller must have permission to get all shipments under the parent shipper"
          ", or the caller must have permission to get each of the requested shipments."
      }
    };
  }

  option (einride.iam.v1.long_running_operations_authorization) = {
    operation_permissions: {
      operation: {type: "iam-example.einride.tech/ShipperOperation"}
      list: "freight.shipperOperations.list"
      get: "freight.shipperOperations.get"
      cancel: "freight.shipperOperations.cancel"
      delete: "freight.shipperOperations.delete"
      wait: "freight.shipperOperations.wait"
    }
    before: true
  };

  option (einride.iam.v1.predefined_roles) = {
    role: {
      name: "roles/freight.admin"
      title: "Freight Admin"
      description: "Full admin permissions to freight."
      included_permissions: "freight.*"
    }
    role: {
      name: "roles/freight.editor"
      title: "Freight Editor"
      description: "Edit permissions to freight."
      included_permissions: "freight.shippers.get"
      included_permissions: "freight.shippers.update"
      included_permissions: "freight.sites.get"
      included_permissions: "freight.sites.list"
      included_permissions: "freight.sites.create"
      included_permissions: "freight.sites.update"
      included_permissions: "freight.sites.delete"
      included_permissions: "freight.shipments.get"
      included_permissions: "freight.shipments.list"
      included_permissions: "freight.shipments.create"
      included_permissions: "freight.shipments.update"
      included_permissions: "freight.shipments.delete"
    }
    role: {
      name: "roles/freight.viewer"
      title: "Freight Viewer"
      description: "View permissions to freight."
      included_permissions: "freight.shippers.get"
      included_permissions: "freight.shippers.list"
      included_permissions: "freight.sites.get"
      included_permissions: "freight.sites.list"
      included_permissions: "freight.shipments.get"
      included_permissions: "freight.shipments.list"
    }
  };

  // Sets the access control policy on the specified shipper, site or shipment.
  // (-- api-linter: core::0136::response-message-name=disabled --)
  rpc SetIamPolicy(google.iam.v1.SetIamPolicyRequest) returns (google.iam.v1.Policy) {
    option (google.api.http) = {
      post: "/v1/{resource=shippers/*}:setIamPolicy"
      body: "*"
      additional_bindings: {
        post: "/v1/{resource=shippers/*/sites/*}:setIamPolicy"
        body: "*"
      }
      additional_bindings: {
        post: "/v1/{resource=shippers/*/shipments/*}:setIamPolicy"
        body: "*"
      }
    };
    option (google.api.method_signature) = "resource,policy";
    option (einride.iam.v1.method_authorization) = {
      resource_permissions: {
        resource_permission: {
          resource: {type: "/"}
          permission: "freight.root.setIamPolicy"
        }
        resource_permission: {
          resource: {type: "iam-example.einride.tech/Shipper"}
          permission: "freight.shippers.setIamPolicy"
        }
        resource_permission: {
          resource: {type: "iam-example.einride.tech/Site"}
          permission: "freight.sites.setIamPolicy"
        }
        resource_permission: {
          resource: {type: "iam-example.einride.tech/Shipment"}
          permission: "freight.shipments.setIamPolicy"
        }
      }
      before: {
        expression: "test(caller, request.resource)"
        description: "The caller must have permission to get the resource's IAM policy."
      }
    };
  }

  // Gets the access control policy for a shipper, site or shipment resource.
  //
  // Returns an empty policy if the resource exists and does not have a policy
  // set.
  rpc GetIamPolicy(google.iam.v1.GetIamPolicyRequest) returns (google.iam.v1.Policy) {
    option (google.api.http) = {
      post: "/v1/{resource=shippers/*}:getIamPolicy"
      body: "*"
      additional_bindings: {
        post: "/v1/{resource=shippers/*/sites/*}:getIamPolicy"
        body: "*"
      }
      additional_bindings: {
        post: "/v1/{resource=shippers/*/shipments/*}:getIamPolicy"
        body: "*"
      }
    };
    option (google.api.method_signature) = "resource";
    option (einride.iam.v1.method_authorization) = {
      resource_permissions: {
        resource_permission: {
          resource: {type: "/"}
          permission: "freight.root.getIamPolicy"
        }
        resource_permission: {
          resource: {type: "iam-example.einride.tech/Shipper"}
          permission: "freight.shippers.getIamPolicy"
        }
        resource_permission: {
          resource: {type: "iam-example.einride.tech/Site"}
          permission: "freight.sites.getIamPolicy"
        }
        resource_permission: {
          resource: {type: "iam-example.einride.tech/Shipment"}
          permission: "freight.shipments.getIamPolicy"
        }
      }
      before: {
        expression: "test(caller, request.resource)"
        description: "The caller must have permission to get the resource's IAM policy."
      }
    };
  }

  // Returns the permissions that a caller has on the specified shipper or
  // site or shipment.
  //
  // Note: This operation is designed to be used for building permission-aware
  // UIs and command-line tools, not for authorization checking. This operation
  // may "fail open" without warning.
  rpc TestIamPermissions(google.iam.v1.TestIamPermissionsRequest) returns (google.iam.v1.TestIamPermissionsResponse) {
    option (google.api.http) = {
      post: "/v1/{resource=shippers/*}:testIamPermissions"
      body: "*"
      additional_bindings: {
        post: "/v1/{resource=shippers/*/sites/*}:testIamPermissions"
        body: "*"
      }
      additional_bindings: {
        post: "/v1/{resource=shippers/*/shipments/*}:testIamPermissions"
        body: "*"
      }
    };
    option (google.api.method_signature) = "resource,permissions";
    option (einride.iam.v1.method_authorization).none = true;
  }

  // Lists every predefined role that this service supports.
  // (-- api-linter: core::0132=disabled --)
  rpc ListRoles(google.iam.admin.v1.ListRolesRequest) returns (google.iam.admin.v1.ListRolesResponse) {
    option (google.api.http) = {get: "/v1/roles"};
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.roles.list"
      before: {
        expression: "test(caller, '/')"
        description: "The caller must have permission to list the service's predefined roles."
      }
    };
  }

  // Get a predefined role.
  rpc GetRole(google.iam.admin.v1.GetRoleRequest) returns (google.iam.admin.v1.Role) {
    option (google.api.http) = {get: "/v1/{name=roles/*}"};
    option (google.api.method_signature) = "name";
    option (einride.iam.v1.method_authorization) = {
      permission: "freight.roles.get"
      before: {
        expression: "test(caller, request.name)"
        description: "The caller must have permission to get the role."
      }
    };
  }
}

// Request message for FreightService.GetShipper.
message GetShipperRequest {
  // The resource name of the shipper to retrieve.
  // Format: shippers/{shipper}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "iam-example.einride.tech/Shipper"
  ];
}

// Request message for FreightService.ListShippers.
message ListShippersRequest {
  // Requested page size. Server may return fewer shippers than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];

  // A token identifying a page of results the server should return.
  // Typically, this is the value of
  // [ListShippersResponse.next_page_token][einride.example.freight.v1.ListShippersResponse.next_page_token]
  // returned from the previous call to `ListShippers` method.
  string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for FreightService.ListShippers.
message ListShippersResponse {
  // The list of shippers.
  repeated Shipper shippers = 1;

  // A token to retrieve next page of results.  Pass this value in the
  // [ListShippersRequest.page_token][einride.example.freight.v1.ListShippersRequest.page_token]
  // field in the subsequent call to `ListShippers` method to retrieve the next
  // page of results.
  string next_page_token = 2;
}

// Request message for FreightService.CreateShipper.
message CreateShipperRequest {
  // The shipper to create.
  Shipper shipper = 1 [(google.api.field_behavior) = REQUIRED];
  // The ID to use for the shipper, which will become the final component of
  // the shippers's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string shipper_id = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for FreightService.UpdateShipper.
message UpdateShipperRequest {
  // The shipper to update with. The name must match or be empty.
  // The shipper's `name` field is used to identify the shipper to be updated.
  // Format: shippers/{shipper}
  Shipper shipper = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for FreightService.DeleteShipper.
message DeleteShipperRequest {
  // The resource name of the shipper to delete.
  // Format: shippers/{shipper}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "iam-example.einride.tech/Shipper"
  ];

  // Set force as true to perform a cascading delete.
  bool force = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for FreightService.GetSite.
message GetSiteRequest {
  // The resource name of the site to retrieve.
  // Format: shippers/{shipper}/sites/{site}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "iam-example.einride.tech/Site"
  ];
}

// Request message for FreightService.ListSites.
message ListSitesRequest {
  // The resource name of the parent, which owns this collection of sites.
  // Format: shippers/{shipper}
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam-example.einride.tech/Shipper"}
  ];

  // Requested page size. Server may return fewer sites than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // A token identifying a page of results the server should return.
  // Typically, this is the value of
  // [ListSitesResponse.next_page_token][einride.example.freight.v1.ListSitesResponse.next_page_token]
  // returned from the previous call to `ListSites` method.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for FreightService.ListSites.
message ListSitesResponse {
  // The list of sites.
  repeated Site sites = 1;

  // A token to retrieve next page of results.  Pass this value in the
  // [ListSitesRequest.page_token][einride.example.freight.v1.ListSitesRequest.page_token]
  // field in the subsequent call to `ListSites` method to retrieve the next
  // page of results.
  string next_page_token = 2;
}

// Request message for FreightService.CreateSite.
message CreateSiteRequest {
  // The resource name of the parent shipper for which this site will be created.
  // Format: shippers/{shipper}
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam-example.einride.tech/Shipper"}
  ];
  // The site to create.
  Site site = 2 [(google.api.field_behavior) = REQUIRED];
  // The ID to use for the site, which will become the final component of
  // the site's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string site_id = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for FreightService.UpdateSite.
message UpdateSiteRequest {
  // The site to update with. The name must match or be empty.
  // The site's `name` field is used to identify the site to be updated.
  // Format: shippers/{shipper}/sites/{site}
  Site site = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for FreightService.DeleteSite.
message DeleteSiteRequest {
  // The resource name of the site to delete.
  // Format: shippers/{shipper}/sites/{site}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "iam-example.einride.tech/Site"
  ];
}

// Request message for FreightService.BatchGetSites.
message BatchGetSitesRequest {
  // The parent resource shared by all sites being retrieved.
  // If this is set, the parent of all of the sites specified in `names`
  // must match this field.
  // Format: `shippers/{shipper}`
  string parent = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.resource_reference) = {type: "iam-example.einride.tech/Shipper"}
  ];

  // The names of the sites to retrieve.
  // A maximum of 1000 sites can be retrieved in a batch.
  // Format: `shippers/{shipper}/sites/{site}`
  repeated string names = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam-example.einride.tech/Site"}
  ];
}

// Response message for FreightService.BatchGetSites.
message BatchGetSitesResponse {
  // Sites requested.
  repeated Site sites = 1;
}

// Request message for FreightService.SearchSites.
message SearchSitesRequest {
  // The resource name of the parent, which owns this collection of sites.
  // Format: shippers/{shipper}
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam-example.einride.tech/Shipper"}
  ];

  // Requested page size. Server may return fewer sites than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // A token identifying a page of results the server should return.
  // Typically, this is the value of
  // [ListSitesResponse.next_page_token][einride.example.freight.v1.ListSitesResponse.next_page_token]
  // returned from the previous call to `ListSites` method.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for FreightService.SearchSites.
message SearchSitesResponse {
  // The list of sites.
  repeated Site sites = 1;

  // A token to retrieve next page of results. Pass this value in the
  // [ListSitesRequest.page_token][einride.example.freight.v1.ListSitesRequest.page_token]
  // field in the subsequent call to `ListSites` method to retrieve the next
  // page of results.
  string next_page_token = 2;
}

// Request message for FreightService.GetShipment.
message GetShipmentRequest {
  // The resource name of the shipment to retrieve.
  // Format: shippers/{shipper}/shipments/{shipment}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "iam-example.einride.tech/Shipment"
  ];
}

// Request message for FreightService.ListShipments.
message ListShipmentsRequest {
  // The resource name of the parent, which owns this collection of shipments.
  // Format: shippers/{shipper}
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam-example.einride.tech/Shipper"}
  ];

  // Requested page size. Server may return fewer shipments than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // A token identifying a page of results the server should return.
  // Typically, this is the value of
  // [ListShipmentsResponse.next_page_token][einride.example.freight.v1.ListShipmentsResponse.next_page_token]
  // returned from the previous call to `ListShipments` method.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for FreightService.ListShipments.
message ListShipmentsResponse {
  // The list of shipments.
  repeated Shipment shipments = 1;

  // A token to retrieve next page of results.  Pass this value in the
  // [ListShipmentsRequest.page_token][einride.example.freight.v1.ListShipmentsRequest.page_token]
  // field in the subsequent call to `ListShipments` method to retrieve the next
  // page of results.
  string next_page_token = 2;
}

// Request message for FreightService.CreateShipment.
message CreateShipmentRequest {
  // The resource name of the parent shipper for which this shipment will be created.
  // Format: shippers/{shipper}
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam-example.einride.tech/Shipper"}
  ];
  // The shipment to create.
  Shipment shipment = 2 [(google.api.field_behavior) = REQUIRED];
  // The ID to use for the shipment, which will become the final component of
  // the shipment's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string shipment_id = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for FreightService.UpdateShipment.
message UpdateShipmentRequest {
  // The shipment to update with. The name must match or be empty.
  // The shipment's `name` field is used to identify the shipment to be updated.
  // Format: shippers/{shipper}/shipments/{shipment}
  Shipment shipment = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for FreightService.DeleteShipment.
message DeleteShipmentRequest {
  // The resource name of the shipment to delete.
  // Format: shippers/{shipper}/shipments/{shipment}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "iam-example.einride.tech/Shipment"
  ];
}

// Request message for FreightService.BatchGetShipments.
message BatchGetShipmentsRequest {
  // The parent resource shared by all shipments being retrieved.
  // If this is set, the parent of all of the shipments specified in `names`
  // must match this field.
  // Format: `shippers/{shipper}`
  string parent = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.resource_reference) = {type: "iam-example.einride.tech/Shipper"}
  ];

  // The names of the shipments to retrieve.
  // A maximum of 1000 shipments can be retrieved in a batch.
  // Format: `shippers/{shipper}/shipments/{shipment}`
  repeated string names = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam-example.einride.tech/Shipment"}
  ];
}

// Response message for FreightService.BatchGetShipments.
message BatchGetShipmentsResponse {
  // Shipments requested.
  repeated Shipment shipments = 1;
}

// Long-running operation metadata message for freight service operations.
message DeleteShipperOperationMetadata {
  // The time this operation started.
  google.protobuf.Timestamp start_time = 1;

  // The time this operation completed. Will be unset if operation still in
  // progress.
  google.protobuf.Timestamp end_time = 2;
}
